exit
{a:2}.values
choices_coordinates.select{ |coordinates, (k, v)| puts k.values}
choices_coordinates.select{ |coordinates, (k, v)| puts k.value}
choices_coordinates.select{ |coordinates, (k, v)| puts k}
choices_coordinates.select{ |coordinates, k, v| puts k}
choices_coordinates.select{ |coordinates, k, v| puts v}
choices_coordinates.select{ |coordinates, (k, v)| puts v}
choices_coordinates.select{ |coordinates, (k, v)| puts k; puts v}
choices_coordinates.select{ |coordinates, (k, v)| choices_keys.include?(v) }
available_choices_coordinates
exit
choices_coordinates
available_choices_coordinates
exit
ENV.select{|k, v| v.include?("ocra")}
ENV.values.select{|x| x.include?("ocra")}
ENV.values
ENV
exit
[*choices_coordinates.keys[index][0], choice_data[:choice_text], 17]
c
build_text(*[*choices_coordinates.keys[index][0], choice_data[:choice_text], 17])
[*choices_coordinates.keys[index][0], choice_data[:choice_text], 17]
exit
choice_data[:text]
choice_data
choices_coordinates.keys[index][0]
choices_coordinates.keys[index]
choices_coordinates.keys
choices_coordinates
exit
display_message "test"
c
display_message "test"
c
display_message "test"
c
display_message "test"
c
display_message "test"
c
display_message "test"
c
display_message "test"
exit
exit-
c
display_message("toto")
display_text("toto")
c
update_scene
      display_message("Culculculculculculcul")
      display_message("test")
c
      display_message("test")
